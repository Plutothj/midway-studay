generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categories {
  id          Int       @id @default(autoincrement())
  name        String    @unique(map: "name") @db.VarChar(100)
  description String?   @db.Text
  created_at  DateTime? @default(now()) @db.Timestamp(0)
}

model comments {
  id         Int       @id @default(autoincrement())
  user_id    Int
  post_id    Int
  content    String    @db.Text
  parent_id  Int?
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)

  @@index([parent_id], map: "parent_id")
  @@index([post_id], map: "post_id")
  @@index([user_id], map: "user_id")
}

model post_bookmarks {
  user_id    Int
  post_id    Int
  created_at DateTime? @default(now()) @db.Timestamp(0)

  @@id([user_id, post_id])
  @@index([post_id], map: "post_id")
}

model post_categories {
  post_id     Int
  category_id Int

  @@id([post_id, category_id])
}

model post_likes {
  user_id    Int
  post_id    Int
  created_at DateTime? @default(now()) @db.Timestamp(0)

  @@id([user_id, post_id])
  @@index([post_id], map: "post_id")
}

model post_tags {
  post_id Int
  tag_id  Int

  @@id([post_id, tag_id])
}

model posts {
  id          Int           @id @default(autoincrement())
  user_id     Int
  title       String        @db.VarChar(255)
  slug        String        @unique(map: "slug") @db.VarChar(255)
  content     String        @db.LongText
  summary     String?       @db.Text
  cover_image String?       @db.VarChar(255)
  status      posts_status? @default(draft)
  view_count  Int?          @default(0)
  created_at  DateTime?     @default(now()) @db.Timestamp(0)
  updated_at  DateTime?     @default(now()) @db.Timestamp(0)

  @@index([user_id], map: "user_id")
}

model tags {
  id         Int       @id @default(autoincrement())
  name       String    @unique(map: "name") @db.VarChar(100)
  created_at DateTime? @default(now()) @db.Timestamp(0)
}

model users {
  id            Int         @id @default(autoincrement())
  username      String      @unique(map: "username") @db.VarChar(50)
  email         String      @unique(map: "email") @db.VarChar(100)
  password_hash String      @db.VarChar(255)
  avatar_url    String?     @db.VarChar(255)
  bio           String?     @db.Text
  role          users_role? @default(user)
  createdAt     DateTime    @default(now()) @db.DateTime(6)
  updatedAt     DateTime    @default(now()) @db.DateTime(6)
}

enum users_role {
  user
  admin
}

enum posts_status {
  draft
  published
}
